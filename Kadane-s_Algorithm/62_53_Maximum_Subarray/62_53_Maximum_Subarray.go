package main

/* Задача Максимальный подмассив
Дан массив целых чисел nums. Найдите подмассив с наибольшей суммой и верните его сумму.

Объяснение работы алгоритма Кадане:
Мы идем по массиву и на каждом шаге выбираем:
либо продолжить текущий подмассив, добавив nums[i],
либо начать новый подмассив с nums[i].
Таким образом, currentSum хранит сумму "лучшего" подмассива, заканчивающегося в позиции i.
maxSum хранит глобально максимальную сумму за все пройденные элементы.
Алгоритм работает за O(n) и использует только O(1) дополнительной памяти. */

import (
	"fmt"
)

// ─────────────╮
// Функция реализует алгоритм Кадане
// Она принимает массив целых чисел и возвращает максимальную сумму подмассива.
func maxSubArray(nums []int) int {
	// Инициализируем переменные:
	// currentSum — текущая сумма подмассива, который мы рассматриваем
	// maxSum — максимальная сумма среди всех найденных подмассивов
	currentSum := nums[0]
	maxSum := nums[0]
	// Начинаем с индекса 1, так как первый элемент уже учтен
	for i := 1; i < len(nums); i++ {
		num := nums[i]
		// На каждом шаге решаем:
		// либо продолжаем текущий подмассив, добавив nums[i],
		// либо начинаем новый подмассив с nums[i].
		if currentSum+num > num {
			currentSum = currentSum + num
			fmt.Println("  ╰──> num =", num, ",  currentSum + num > num, currentSum =", currentSum)
		} else {
			currentSum = num
			fmt.Println("  ╰──> num =", num, ",  Иначе currentSum + num <= num, currentSum =", currentSum)
		}
		// Обновляем maxSum, если текущая сумма оказалась больше
		if currentSum > maxSum {
			maxSum = currentSum
		}
	}
	return maxSum
}

// ─────────────╯

// ─────────────╮╰──>
func main() {
	fmt.Println()
	// Примеры
	nums1 := []int{-2, 1, -3, 4, -1, 2, 1, -5, 4}
	fmt.Println("Исходный массив:", nums1)
	fmt.Println("Максимальная сумма подмассива:", maxSubArray(nums1), "\n ") // Ожидается 6
	nums2 := []int{1}
	fmt.Println("Исходный массив:", nums2)
	fmt.Println("Максимальная сумма подмассива:", maxSubArray(nums2), "\n ") // Ожидается 1
	nums3 := []int{5, 4, -1, 7, 8}
	fmt.Println("Исходный массив:", nums3)
	fmt.Println("Максимальная сумма подмассива:", maxSubArray(nums3), "\n ") // Ожидается 23
	fmt.Println()
}
