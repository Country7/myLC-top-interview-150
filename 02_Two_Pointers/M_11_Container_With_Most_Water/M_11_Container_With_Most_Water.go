package main

import "fmt"

/* Задача 11. Контейнер с наибольшим количеством воды
Вам дан массив целых чисел height длиной n. Проведено n вертикальных линий таким образом, что две конечные точки i-й линии — (i, 0) и (i, height[i]).

Найдите две линии, которые вместе с осью X образуют контейнер, содержащий наибольшее количество воды.
Вычислите максимальный объём воды, который может вместить контейнер.
Обратите внимание, что контейнер нельзя наклонять.

Пример 1:
Входные данные: height = [1,8,6,2,5,4,8,3,7]
Выходные данные: 49
Пояснение: Вертикальные линии выше представлены массивом [1,8,6,2,5,4,8,3,7]. В этом случае максимальная площадь воды (синяя часть 1,[8,6,2,5,4,8,3,7] ) , которую может вместить контейнер, равна 49.

Пример 2:
Входные данные: height = [1,1]
Выходные данные: 1

*/

func maxArea(height []int) int {
	// переменная для хранения максимальной площади
	maxWater := 0
	// Два указателя: левый и правый
	left, right := 0, len(height)-1

	// Пока указатели не пересеклись
	for left < right {
		// Вычисляем высоту контейнера — ограничивается меньшей стенкой
		h := height[left]
		if h > height[right] {
			h = height[right]
		}
		// Вычисляем ширину
		width := right - left
		// Площадь текущего "контейнера"
		area := h * width

		// Обновляем максимум, если нашли больше
		if area > maxWater {
			maxWater = area
		}

		// Двигаем указатель, который стоит на меньшей высоте,
		// чтобы попробовать найти более высокий и увеличить площадь
		if height[left] < height[right] {
			left++
		} else {
			right--
		}
	}
	return maxWater
}

func main() {
	example := []int{1, 8, 6, 2, 5, 4, 8, 3, 7}
	fmt.Println(maxArea(example)) // Ожидаемый вывод: 49
}
