package main

/* Задача Факториал с конечными нулями
Для заданного целого числа n вычислите количество конечных нулей в числе n!.
Обратите внимание, что n! = n * (n - 1) * (n - 2) * ... * 3 * 2 * 1. */

import (
	"fmt"
)

// ─────────────╮
// Функция возвращает количество конечных нулей в факториале числа n
func trailingZeroes(n int) int {
	count := 0
	// Каждый ноль на конце факториала появляется из множества 2 и 5.
	// Так как четных чисел (2) больше, чем кратных 5,
	// количество нулей определяется числом кратных 5, 25, 125 и т.д.
	// Пока n делится на 5 и больше
	for n > 0 {
		n = n / 5  // делим n на 5
		count += n // добавляем количество кратных 5, 25, 125...
	}
	return count
}

// ─────────────╯

// ─────────────╮╰──>
func main() {
	fmt.Println()
	// Примеры
	fmt.Println(trailingZeroes(3))   // Вывод: 0
	fmt.Println(trailingZeroes(5))   // Вывод: 1
	fmt.Println(trailingZeroes(0))   // Вывод: 0
	fmt.Println(trailingZeroes(100)) // Вывод: 24
	fmt.Println()
}
