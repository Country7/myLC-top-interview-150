package main

/* Задача Лучшее время для покупки и продажи акций II
Вам дан целочисленный массив pricing, где pricing[i] — цена данной акции на i-й день.
Каждый день вы можете решить купить и/или продать акцию. Одновременно вы можете держать только одну акцию. Однако вы можете купить её и сразу же продать в тот же день.
Определите и верните максимальную возможную прибыль.  */

import (
	"fmt"
)

// ─────────────╮
// Функция для вычисления максимальной прибыли
func maxProfit(prices []int) int {
	// Инициализируем переменную для хранения общей прибыли
	profit := 0
	// Проходим по всем дням, кроме первого
	for i := 1; i < len(prices); i++ {
		// Если цена текущего дня больше, чем цена предыдущего дня,
		// значит можно получить прибыль, купив на предыдущий день и продав сегодня
		if prices[i] > prices[i-1] {
			profit += prices[i] - prices[i-1] // Добавляем прибыль к общей
		}
	}
	// Возвращаем общую прибыль
	return profit
}

// ─────────────╯

// ─────────────╮╰──>
func main() {
	fmt.Println()
	// Примеры
	prices1 := []int{7, 1, 5, 3, 6, 4}
	prices2 := []int{1, 2, 3, 4, 5}
	prices3 := []int{7, 6, 4, 3, 1}
	fmt.Println("Example 1 Profit:", maxProfit(prices1)) // Output: 7
	fmt.Println("Example 2 Profit:", maxProfit(prices2)) // Output: 4
	fmt.Println("Example 3 Profit:", maxProfit(prices3)) // Output: 0
	fmt.Println()
}
